#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

##############################################################################
#
#   magritte-bootvisor-jre start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh magritte-bootvisor-jre
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and MAGRITTE_BOOTVISOR_JRE_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd -P "${APP_HOME:-./}.." > /dev/null && printf '%s\n' "$PWD" ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/lib/magritte-bootvisor-jre-1.500.0.jar:$APP_HOME/lib/main:$APP_HOME/lib/main:$APP_HOME/lib/magritte-bootvisor-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-render-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-packages-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-signing-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-startup-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-errors-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-logging-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-polling-1.500.0.jar:$APP_HOME/lib/magritte-bootvisor-errors-objects-1.500.0.jar:$APP_HOME/lib/magritte-common-9.2323.0.jar:$APP_HOME/lib/magritte-sdk-9.2304.0.jar:$APP_HOME/lib/magritte-bootvisor-config-1.500.0.jar:$APP_HOME/lib/witchcraft-4.237.0.jar:$APP_HOME/lib/witchcraft-logging-log4j-4.237.0.jar:$APP_HOME/lib/sls-logging-log4j-service-10.10.0.jar:$APP_HOME/lib/sls-logging-log4j-10.10.0.jar:$APP_HOME/lib/magritte-credential-encryption-lib-9.2393.0.jar:$APP_HOME/lib/magritte-bootvisor-common-9.2323.0.jar:$APP_HOME/lib/magritte-coordinator-api-9.2415.0.jar:$APP_HOME/lib/conjure-java-jaxrs-client-8.18.0.jar:$APP_HOME/lib/sls-status-undertow-6.75.0.jar:$APP_HOME/lib/sls-debug-undertow-0.90.0.jar:$APP_HOME/lib/conjure-java-undertow-runtime-8.45.0.jar:$APP_HOME/lib/conjure-java-jersey-jakarta-server-8.18.0.jar:$APP_HOME/lib/dialogue-clients-5.4.0.jar:$APP_HOME/lib/dialogue-annotations-5.4.0.jar:$APP_HOME/lib/dialogue-serde-5.4.0.jar:$APP_HOME/lib/magritte-coordinator-api-dialogue-9.2415.0.jar:$APP_HOME/lib/magritte-coordinator-api-jersey-9.2415.0.jar:$APP_HOME/lib/magritte-coordinator-api-undertow-9.2415.0.jar:$APP_HOME/lib/magritte-coordinator-api-objects-9.2415.0.jar:$APP_HOME/lib/sls-logging-10.10.0.jar:$APP_HOME/lib/sls-logging-jackson-10.10.0.jar:$APP_HOME/lib/foundry-metadata-api-objects-1.890.0.jar:$APP_HOME/lib/hook-events-2.59.0.jar:$APP_HOME/lib/conjure-java-jackson-serialization-8.18.0.jar:$APP_HOME/lib/witchcraft-logging-spi-4.237.0.jar:$APP_HOME/lib/conjure-java-legacy-clients-8.18.0.jar:$APP_HOME/lib/dialogue-apache-hc5-client-5.4.0.jar:$APP_HOME/lib/dialogue-core-5.4.0.jar:$APP_HOME/lib/client-config-8.18.0.jar:$APP_HOME/lib/tritium-lib-0.97.0.jar:$APP_HOME/lib/deadlines-0.13.0.jar:$APP_HOME/lib/tritium-metrics-jvm-0.97.0.jar:$APP_HOME/lib/tritium-caffeine-0.97.0.jar:$APP_HOME/lib/dialogue-blocking-channels-5.4.0.jar:$APP_HOME/lib/tritium-metrics-0.97.0.jar:$APP_HOME/lib/sls-logging-monitors-10.10.0.jar:$APP_HOME/lib/sls-logging-metrics-10.10.0.jar:$APP_HOME/lib/tritium-registry-0.97.0.jar:$APP_HOME/lib/artifacts-types-api-0.1351.0.jar:$APP_HOME/lib/result-0.19.0.jar:$APP_HOME/lib/sls-status-core-6.75.0.jar:$APP_HOME/lib/hook-events-config-2.59.0.jar:$APP_HOME/lib/service-config-2.59.0.jar:$APP_HOME/lib/conjure-undertow-annotations-8.45.0.jar:$APP_HOME/lib/sls-status-api-undertow-6.75.0.jar:$APP_HOME/lib/conjure-undertow-lib-8.45.0.jar:$APP_HOME/lib/sls-debug-core-0.90.0.jar:$APP_HOME/lib/sls-debug-api-0.90.0.jar:$APP_HOME/lib/sls-logging-api-objects-10.10.0.jar:$APP_HOME/lib/hook-events-dialogue-2.59.0.jar:$APP_HOME/lib/dialogue-target-5.4.0.jar:$APP_HOME/lib/sls-status-api-6.75.0.jar:$APP_HOME/lib/sls-status-api-objects-6.75.0.jar:$APP_HOME/lib/build2-api-objects-1.1563.0.jar:$APP_HOME/lib/foundry-templates-api-objects-3.2378.0.jar:$APP_HOME/lib/low-trust-network-policy-api-objects-3.1489.0.jar:$APP_HOME/lib/magritte-coordinator-api-conjure-deps-9.2415.0.jar:$APP_HOME/lib/magritte-coordinator-connection-api-objects-9.2415.0.jar:$APP_HOME/lib/low-trust-service-discovery-api-objects-3.1489.0.jar:$APP_HOME/lib/hook-events-objects-2.59.0.jar:$APP_HOME/lib/conjure-lib-8.45.0.jar:$APP_HOME/lib/auth-tokens-filter-jakarta-3.18.0.jar:$APP_HOME/lib/auth-tokens-3.18.0.jar:$APP_HOME/lib/keystores-8.18.0.jar:$APP_HOME/lib/human-readable-types-1.7.0.jar:$APP_HOME/lib/sls-versions-1.5.0.jar:$APP_HOME/lib/tracing-servlet-jakarta-6.22.0.jar:$APP_HOME/lib/tracing-undertow-6.22.0.jar:$APP_HOME/lib/tritium-tracing-0.97.0.jar:$APP_HOME/lib/tracing-jersey-jakarta-6.22.0.jar:$APP_HOME/lib/tracing-6.22.0.jar:$APP_HOME/lib/refreshable-2.5.0.jar:$APP_HOME/lib/encrypted-config-value-module-6.0.0.jar:$APP_HOME/lib/magritte-api-9.2556.0.jar:$APP_HOME/lib/errors-2.59.0.jar:$APP_HOME/lib/ssl-config-2.59.0.jar:$APP_HOME/lib/nylon-threads-0.4.0.jar:$APP_HOME/lib/jfr-logger-lib-0.129.0.jar:$APP_HOME/lib/jfr-logger-impl-0.129.0.jar:$APP_HOME/lib/jfr-logger-api-0.129.0.jar:$APP_HOME/lib/dialogue-futures-5.4.0.jar:$APP_HOME/lib/resource-identifier-2.9.0.jar:$APP_HOME/lib/tritium-slf4j-0.97.0.jar:$APP_HOME/lib/tritium-core-0.97.0.jar:$APP_HOME/lib/encrypted-config-value-6.0.0.jar:$APP_HOME/lib/tritium-ids-0.97.0.jar:$APP_HOME/lib/preconditions-3.9.0.jar:$APP_HOME/lib/streams-2.4.0.jar:$APP_HOME/lib/jackson-datatype-guava-2.18.3.jar:$APP_HOME/lib/guava-retrying-v2.0.0.jar:$APP_HOME/lib/refresh-utils-8.18.0.jar:$APP_HOME/lib/guava-33.4.8-jre.jar:$APP_HOME/lib/caffeine-3.2.0.jar:$APP_HOME/lib/logger-3.9.0.jar:$APP_HOME/lib/logger-slf4j-3.9.0.jar:$APP_HOME/lib/logger-log4j-3.9.0.jar:$APP_HOME/lib/logger-spi-3.9.0.jar:$APP_HOME/lib/error_prone_annotations-2.36.0.jar:$APP_HOME/lib/junit-jupiter-5.12.2.jar:$APP_HOME/lib/jersey-bean-validation-3.1.3.jar:$APP_HOME/lib/hibernate-validator-8.0.1.Final.jar:$APP_HOME/lib/classmate-1.5.1.jar:$APP_HOME/lib/jackson-dataformat-yaml-2.18.3.jar:$APP_HOME/lib/jackson-datatype-jdk8-2.18.3.jar:$APP_HOME/lib/jackson-datatype-jsr310-2.18.3.jar:$APP_HOME/lib/jersey-media-json-jackson-3.1.3.jar:$APP_HOME/lib/jackson-jakarta-rs-cbor-provider-2.18.3.jar:$APP_HOME/lib/jackson-module-jakarta-xmlbind-annotations-2.18.3.jar:$APP_HOME/lib/jackson-dataformat-cbor-2.18.3.jar:$APP_HOME/lib/jackson-dataformat-smile-2.18.3.jar:$APP_HOME/lib/jackson-datatype-joda-2.18.3.jar:$APP_HOME/lib/conjure-java-jackson-optimizations-8.18.0.jar:$APP_HOME/lib/feign-jackson-8.18.0.jar:$APP_HOME/lib/jackson-jakarta-rs-base-2.18.3.jar:$APP_HOME/lib/jackson-databind-2.18.3.jar:$APP_HOME/lib/jackson-annotations-2.18.3.jar:$APP_HOME/lib/jackson-core-2.18.3.jar:$APP_HOME/lib/auto-service-annotations-1.1.1.jar:$APP_HOME/lib/reflections-0.10.2.jar:$APP_HOME/lib/hdrhistogram-metrics-reservoir-1.1.3.jar:$APP_HOME/lib/jsr305-3.0.2.jar:$APP_HOME/lib/failureaccess-1.0.3.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/j2objc-annotations-3.0.0.jar:$APP_HOME/lib/disruptor-3.4.4.jar:$APP_HOME/lib/feign-core-8.18.0.jar:$APP_HOME/lib/conjure-java-annotations-8.18.0.jar:$APP_HOME/lib/constant-strings-lib-0.117.0.jar:$APP_HOME/lib/constant-strings-registry-0.117.0.jar:$APP_HOME/lib/jvm-diagnostics-0.5.0.jar:$APP_HOME/lib/safe-logging-3.9.0.jar:$APP_HOME/lib/safe-thread-local-random-0.3.0.jar:$APP_HOME/lib/sls-logging-log4j-slf4j-10.10.0.jar:$APP_HOME/lib/tracing-api-6.22.0.jar:$APP_HOME/lib/tritium-api-0.97.0.jar:$APP_HOME/lib/tritium-proxy-0.97.0.jar:$APP_HOME/lib/tritium-time-0.97.0.jar:$APP_HOME/lib/metrics-jvm-4.2.30.jar:$APP_HOME/lib/metrics-core-4.2.30.jar:$APP_HOME/lib/undertow-servlet-2.3.18.Final.jar:$APP_HOME/lib/undertow-core-2.3.18.Final.jar:$APP_HOME/lib/xnio-nio-3.8.16.Final.jar:$APP_HOME/lib/xnio-api-3.8.16.Final.jar:$APP_HOME/lib/jboss-threads-3.8.0.Final.jar:$APP_HOME/lib/smallrye-common-annotation-2.6.0.jar:$APP_HOME/lib/wildfly-common-2.0.1.jar:$APP_HOME/lib/smallrye-common-expression-2.4.0.jar:$APP_HOME/lib/smallrye-common-function-2.6.0.jar:$APP_HOME/lib/smallrye-common-net-2.4.0.jar:$APP_HOME/lib/smallrye-common-ref-2.4.0.jar:$APP_HOME/lib/smallrye-common-constraint-2.6.0.jar:$APP_HOME/lib/smallrye-common-cpu-2.6.0.jar:$APP_HOME/lib/smallrye-common-os-2.4.0.jar:$APP_HOME/lib/jakarta.xml.bind-api-4.0.0.jar:$APP_HOME/lib/jakarta.activation-api-2.1.0.jar:$APP_HOME/lib/jersey-container-servlet-3.1.3.jar:$APP_HOME/lib/jersey-container-servlet-core-3.1.3.jar:$APP_HOME/lib/jersey-server-3.1.3.jar:$APP_HOME/lib/jersey-hk2-3.1.3.jar:$APP_HOME/lib/jersey-client-3.1.3.jar:$APP_HOME/lib/jersey-common-3.1.3.jar:$APP_HOME/lib/jakarta.annotation-api-2.1.1.jar:$APP_HOME/lib/jakarta.el-5.0.0-M1.jar:$APP_HOME/lib/jakarta.el-api-5.0.0.jar:$APP_HOME/lib/jakarta.inject-api-2.0.1.jar:$APP_HOME/lib/jakarta.servlet-api-6.0.0.jar:$APP_HOME/lib/jakarta.validation-api-3.0.2.jar:$APP_HOME/lib/jersey-entity-filtering-3.1.3.jar:$APP_HOME/lib/jakarta.ws.rs-api-3.1.0.jar:$APP_HOME/lib/joda-time-2.14.0.jar:$APP_HOME/lib/byte-buddy-1.17.4.jar:$APP_HOME/lib/streamex-0.8.3.jar:$APP_HOME/lib/commons-compress-1.27.1.jar:$APP_HOME/lib/commons-text-1.13.1.jar:$APP_HOME/lib/commons-lang3-3.17.0.jar:$APP_HOME/lib/httpclient5-5.3.1.jar:$APP_HOME/lib/httpcore5-h2-5.2.4.jar:$APP_HOME/lib/httpcore5-5.3.3.jar:$APP_HOME/lib/log4j-core-2.24.3.jar:$APP_HOME/lib/log4j-jul-2.24.3.jar:$APP_HOME/lib/log4j-jcl-2.24.3.jar:$APP_HOME/lib/log4j-jpl-2.24.3.jar:$APP_HOME/lib/log4j-api-2.24.3.jar:$APP_HOME/lib/checker-qual-3.43.0.jar:$APP_HOME/lib/eclipse-collections-11.1.0.jar:$APP_HOME/lib/eclipse-collections-api-11.1.0.jar:$APP_HOME/lib/hk2-locator-3.0.4.jar:$APP_HOME/lib/hk2-api-3.0.4.jar:$APP_HOME/lib/hk2-utils-3.0.4.jar:$APP_HOME/lib/osgi-resource-locator-1.0.3.jar:$APP_HOME/lib/aopalliance-repackaged-3.0.4.jar:$APP_HOME/lib/HdrHistogram-2.2.2.jar:$APP_HOME/lib/value-2.10.1-annotations.jar:$APP_HOME/lib/javassist-3.29.2-GA.jar:$APP_HOME/lib/wildfly-client-config-1.0.1.Final.jar:$APP_HOME/lib/jboss-logging-3.6.1.Final.jar:$APP_HOME/lib/okhttp-4.12.0.jar:$APP_HOME/lib/okio-3.6.0.jar:$APP_HOME/lib/okio-jvm-3.6.0.jar:$APP_HOME/lib/kotlin-stdlib-jdk8-1.9.10.jar:$APP_HOME/lib/kotlin-stdlib-jdk7-1.9.10.jar:$APP_HOME/lib/kotlin-stdlib-1.9.10.jar:$APP_HOME/lib/annotations-26.0.2.jar:$APP_HOME/lib/jspecify-1.0.0.jar:$APP_HOME/lib/animal-sniffer-annotation-1.0.jar:$APP_HOME/lib/jcl-over-slf4j-2.0.13.jar:$APP_HOME/lib/jul-to-slf4j-2.0.13.jar:$APP_HOME/lib/log4j-over-slf4j-2.0.13.jar:$APP_HOME/lib/slf4j-api-2.0.13.jar:$APP_HOME/lib/snakeyaml-2.4.jar:$APP_HOME/lib/witchcraft-graal-reflection-4.237.0.jar:$APP_HOME/lib/witchcraft-service-stw-gc-4.237.0.jar:$APP_HOME/lib/commons-codec-1.17.1.jar:$APP_HOME/lib/commons-io-2.19.0.jar:$APP_HOME/lib/metrics-annotation-4.2.30.jar:$APP_HOME/lib/javax.ws.rs-api-2.1.1.jar:$APP_HOME/lib/commons-collections4-4.4.jar:$APP_HOME/lib/maven-artifact-3.9.9.jar:$APP_HOME/lib/junit-jupiter-params-5.12.2.jar:$APP_HOME/lib/junit-jupiter-engine-5.12.2.jar:$APP_HOME/lib/junit-jupiter-api-5.12.2.jar:$APP_HOME/lib/junit-platform-engine-1.12.2.jar:$APP_HOME/lib/junit-platform-commons-1.12.2.jar:$APP_HOME/lib/apiguardian-api-1.1.2.jar:$APP_HOME/lib/awaitility-4.3.0.jar:$APP_HOME/lib/bcpkix-jdk15on-1.70.jar:$APP_HOME/lib/bcutil-jdk15on-1.70.jar:$APP_HOME/lib/bcprov-jdk15on-1.70.jar:$APP_HOME/lib/plexus-utils-3.5.1.jar:$APP_HOME/lib/hamcrest-2.2.jar:$APP_HOME/lib/kotlin-stdlib-common-1.9.10.jar:$APP_HOME/lib/opentest4j-1.3.0.jar:$APP_HOME/lib/semver4j-4.1.0.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and MAGRITTE_BOOTVISOR_JRE_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and MAGRITTE_BOOTVISOR_JRE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"--add-opens" "java.base/sun.nio.ch=ALL-UNNAMED"'

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        -classpath "$CLASSPATH" \
        com.palantir.magritte.bootvisor.BootvisorServer \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $MAGRITTE_BOOTVISOR_JRE_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
